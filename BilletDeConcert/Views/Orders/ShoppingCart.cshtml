@using BilletDeConcert.Data.ViewModels
@model ShoppingCartVM

@{
    ViewData["Title"] = "Panier d'achat";
}

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">
            <h2>Récapitulatif de panier d'achat</h2>

        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Montant sélectionné</th>
                    <th>Concert</th>
                    <th>Prix</th>
                    <th>Sous-total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                {
                    <tr>
                        <td class="align-middle">@item.Amount</td>
                        <td class="align-middle">@item.Concert.Nom</td>
                        <td class="align-middle">@item.Concert.Prix.ToString("c")</td>
                        <td class="align-middle">@((item.Amount*item.Concert.Prix).ToString("c"))</td>
                        <td class="align-middle">
                            <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart"
                           asp-route-id="@item.Concert.Id">
                                <i class="bi bi-cart-dash"></i>

                            </a>
                            |
                            <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart"
                           asp-route-id="@item.Concert.Id">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"></td>
                    <td><b>Total:</b></td>
                    <td>
                        @Model.ShoppingCartTotal.ToString("c")
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
        <div class="text-center">
            <div class="btn-group">
                <a class="btn btn-outline-primary" asp-action="CompleteOrder">
                    Terminer Commande
                </a>
                
            </div>
        </div>

        <div class="text-right">
            <div class="btn-group">
                @*<a class="btn btn-outline-primary" asp-action="CompleteOrder">
                    Complete order
                    </a>*@
                <div id="paypal-btn"></div>
                <span style="padding:5px"></span>
                <a class="btn btn-outline-success" asp-controller="Concerts" asp-action="Index">
                    Ajouter d'autres articles
                </a>
            </div>
        </div>

    </div>
</div>
@*
    @section Scripts{

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

    let _total = @Html.Raw(Model.ShoppingCartTotal);

    paypal.Button.render({
    //Configure environment
    env: 'sandbox',
    client: {
    sandbox: 'AcKRtgL4i68EZ2ZYuYUx3ilihAg2YhL5dtF_m19A8MjBWVOn6ewNS4M_uV8gA3xi98zTcUq38gUHbVFx'
    },

    //Customize button
    locale: 'en_US',
    style: {
    size: 'small',
    color: 'gold',
    shape: 'pill'
    },
    commit: true,

    //Set up a payment
    payment: function (data, actions) {
    return actions.payment.create({
    transactions: [{
    amount: {
    total: _total,
    currency: 'USD'
    }
    }]
    });
    },

    //Execute the payment
    onAuthorize: function (data, actions) {
    return actions.payment.execute().then(function () {
    var url = '@Url.Action("CompleteOrder", "Orders", new { })';
    window.location.href = url;
    });
    }

    }, '#paypal-btn')
    </script>
    }
*@